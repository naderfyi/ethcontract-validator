// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/checkContractType/{address}": {
            "get": {
                "description": "Check if the contract at the given Ethereum address is an ERC-20 or ERC-721 contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Check the contract type",
                "operationId": "checkContractType-contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ethereum address of the contract to checkContractType",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.checkContractTypeResponse"
                        },
                        "headers": {
                            "Token": {
                                "type": "string",
                                "description": "Contract Address"
                            }
                        }
                    }
                }
            }
        },
        "/checkVerificationStatus/{address}": {
            "get": {
                "description": "Check if the contract has been verified on Etherscan.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Check the contract verification status for an Ethereum address",
                "operationId": "checkVerificationStatus-contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ethereum address of the contract to checkVerificationStatus",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.checkVerificationStatusResponse"
                        },
                        "headers": {
                            "Token": {
                                "type": "string",
                                "description": "Contract Address"
                            }
                        }
                    }
                }
            }
        },
        "/getContracts/{startBlock}/{endBlock}": {
            "get": {
                "description": "Returns a list of new contracts deployed between a start and end block, along with their verification status, standard (ERC-20 or ERC-721), and transaction details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Get the new contracts deployed between a start and end block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start block",
                        "name": "startBlock",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End block",
                        "name": "endBlock",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.newContractResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.checkContractTypeResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "standard": {
                    "type": "string"
                }
            }
        },
        "main.checkVerificationStatusResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "main.newContractResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block": {
                    "type": "integer"
                },
                "standard": {
                    "type": "string"
                },
                "transaction": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Ethereum Contract Checker API",
	Description:      "Check if the contract at the given Ethereum address is an ERC-20 or ERC-721 contract, and whether it has been verified on Etherscan.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
